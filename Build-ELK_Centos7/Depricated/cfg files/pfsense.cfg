input {
    tcp {
        port => "5526"
    }
    udp {
        port => "5526"
    }
}
filter {
  mutate {
    remove_tag => [ "syslog" ]
    add_tag => [ "firewall" ]
  }
 grok {
    match => [ "message", "<(?<evtid>.*)>(?<datetime>(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\s+(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):(?:[0-5][0-9]):(?:[0-5][0-9])) (?<prog>.*?): (?<msg>.*)" ]
  }
 mutate {
    gsub => ["datetime","  "," "]
  }
  date {
    match => [ "datetime", "MMM dd HH:mm:ss" ]
    timezone => "America/Chicago"
  }
  mutate {
    replace => [ "message", "%{msg}" ]
  }
  mutate {
    remove_field => [ "msg", "datetime" ]
  }
  if [prog] =~ /^snort/ {
    mutate {
      add_tag => [ "SnortIDPS" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message", "%{PFSENSE_SNORT}"]
    }
    if ![geoip] and [ids_src_ip] !~ /^(10\.|192\.168\.)/ {
      geoip {
        add_tag => [ "GeoIP" ]
        source => "ids_src_ip"
        database => "/etc/logstash/GeoLite2-City.mmdb"
      }
    }
    if [prog] =~ /^snort/ {
      mutate {
        add_tag => [ "ET-Sig" ]
        add_field => [ "Signature_Info", "http://doc.emergingthreats.net/bin/view/Main/%{[ids_sig_id]}" ]
      }
    }
  }
  if [prog] =~ /^charon$/ {
    mutate {
      add_tag => [ "ipsec" ]
    }
  }
  if [prog] =~ /^barnyard2/ {
    mutate {
      add_tag => [ "barnyard2" ]
    }
  }
  if [prog] =~ /^openvpn/ {
    mutate {
      add_tag => [ "openvpn" ]
    }
  }
  if [prog] =~ /^ntpd/ {
    mutate {
      add_tag => [ "ntpd" ]
    }
  }
  if [prog] =~ /^php-fpm/ {
    mutate {
      add_tag => [ "web_portal" ]
    }
    grok {
        patterns_dir => ["/etc/logstash/patterns"]
        match => [ "message", "%{PFSENSE_APP}%{PFSENSE_APP_DATA}"]
    }
    mutate {
        lowercase => [ pfsense_ACTION ]
    }
  }
  if [prog] =~ /^apinger/ {
    mutate {
      add_tag => [ "apinger" ]
    }
  }
  if [prog] =~ /^filterlog$/ {
      mutate {
          remove_field => [ "msg", "datetime" ]
      }
      grok {
          add_tag => [ "firewall" ]
          patterns_dir => ["/etc/logstash/patterns"]
          match => [ "message", "%{PFSENSE_LOG_DATA}%{PFSENSE_IP_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}",
                     "message", "%{PFSENSE_IPv4_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}",
                     "message", "%{PFSENSE_IPv6_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}"]
      }
      mutate {
          lowercase => [ proto ]
      }
      if ![geoip] and [src_ip] !~ /^(10\.8\.)/ {
        geoip {
          add_tag => [ "GeoIP" ]
          source => "src_ip"
          database => "/etc/logstash/GeoLite2-City.mmdb"
        }
      }
  }
  mutate {
    remove_tag => [ "_grokparsefailure", "_geoip_lookup_failure " ]
  }
}
output {
  elasticsearch { 
    hosts => ["10.8.8.9:9200"]
    index => "pfsense-%{+YYYY.MM.dd}"
  }
  stdout {
  }
} 