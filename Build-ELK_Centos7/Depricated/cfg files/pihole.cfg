  input {
    tcp {
       port => 5529
       type => "logs"
    }
    udp {
       port => 5529
       type => "logs"
    }
}
filter {
  grok {
    match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
  }
  mutate {
    add_field => [ "received_at", "%{@timestamp}" ]
    add_field => [ "ip_a", "%{host}" ]
    add_field => [ "HostName", "%{syslog_hostname}" ]
    add_tag => [ "pihole" ]
  }
  syslog_pri { }
  date {
    match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM  dd HH:mm:ss" ]
    locale => "en"
  }
  if !("_grokparsefailure" in [tags]) {
    mutate {
      replace => [ "@source_host", "%{syslog_hostname}" ]
      replace => [ "@message", "%{syslog_message}" ]
      remove_tag => [ "_grokparsefailure" ]
    }
  }
}
output {
  elasticsearch { 
    hosts => ["10.8.8.9:9200"]
    index => "pihole-%{+YYYY.MM.dd}"
  }
  stdout {
  }
}